/*

 @name    : 锅巴汉化 - Web汉化插件
 @author  : 麦子、JAR、小蓝、好阳光的小锅巴
 @version : V0.6.1 - 2019-07-09
 @website : http://www.g8hh.com

*/

//1.汉化杂项
var cnItems = {
    _OTHER_: [],

    //未分类：
    'Save': '保存',
    'Export': '导出',
    'Import': '导入',
    'Settings': '设置',
    'Achievements': '成就',
    'Statistics': '统计',
    'Changelog': '更新日志',
    'Hotkeys': '快捷键',
    'ALL': '全部',
    'Default': '默认',
    'AUTO': '自动',
    'default': '默认',
    'electrons': '电子',
    'Electrons': '电子',
    'Enabled': '已启用',
    'Exit Challenge': '退出挑战',
    'gain by': '收益',
    'Finish Cation Challenge': '完成阳离子挑战',
    'Hard Reset': '硬复位',
    'Get new generators': '获取新的发电机',
    'Have': '有',
    'Increase their resources gain by 1x': '将它们的资源增益提高 1 倍',
    'Options': '选项',
    'plasma particles': '等离子体粒子',
    'Reset your anions to get 1 anti-electrical anion': '重置您的负离子以获得 1 个反电负离子',
    'Reset your volume for': '重置您的音量',
    'Unlock new electrical generator': '解锁新的发电机',
    'unspent charged anions': '未消耗的带电阴离子',
    'Loading Game...': '加载游戏...',
    'More Electrons': '更多电子',
    'New Generation': '新一代',
    'Note 1: When enter in any cation challenge, resets cations from their generators and all previous upgrades.': '注1：当进入任何阳离子挑战时，重置来自其发电机和所有先前升级的阳离子。',
    'Note 2: In any cation challenge, cations don’t give their effects.': '注2：在任何阳离子挑战中，阳离子都不会发挥作用。',
    'of plasma, which boosts electrons and electrical powers from electrical generators gain by': '等离子体，它提高了来自发电机的电子和电力',
    'of plasma core, which raises effect from this buyable and volume effect to electron gain by': '等离子核心，从这种可购买的和体积效应对电子增益的影响增加',
    'Level {{ format(player.electrical_generators[x].lvl,0) }}': '等级 {{ format(player.electrical_generators[x].lvl,0) }}',
    'Goal: {{ format(CHALLENGES.cation[x].goal(),0) }} electrons': '目标: {{ format(CHALLENGES.cation[x].goal(),0) }} 电子',
    'Generator #{{ format(x,0) }}': '发电机 #{{ format(x,0) }}',
    'More, {{ FUNCTIONS.cations.generators.getType(x+1) }} Cations boost that cations gain by {{ format(FUNCTIONS.cations.generators.getGainEffect(x).next, 2) }}x': '更多，{{ FUNCTIONS.cations.generators.getType(x+1) }} 阳离子提升了阳离子增益 {{ format(FUNCTIONS.cations.generators.getGainEffect(x).next, 2) }}x',
    'of plasma core': '等离子核心',
    'Ratio [{{ player.anions.ratio_types }}]': '比率 [{{ player.anions.ratio_types }}]',
    'You have': '你有',
    'x, and add': 'x, 并增加',
    'x, and boosts plasma particles gain by': 'x，并提高等离子体粒子增益',
    'Types of Charged Anions': '带电阴离子的类型',
    'Reward: {{ CHALLENGES.cation[x].reward() }}': '奖励: {{ CHALLENGES.cation[x].reward() }}',
    'Multiple electrical capacities by 2.0x': '多个电子容量 2.0x',
    'Multiple electrons gain by 2.0x': '多个电子增益 2.0x',
    'cations': '阳离子',
    'Buyables': '可购买',
    'Cation Generators': '阳离子发电机',
    'Buy to Upgrade': '购买升级',
    'Back to Plasma Map': '回到等离子地图',
    'anions': '阴离子',
    'anions, which generates': '阴离子，其产生',
    'Reset previous electron features for +': '重置以前的电子功能 +',
    'Reset all previous features for +': '重置之前全部的电子功能 +',
    'More, their resources is boosted by electrons ({{ format(PLASMA.resources.volume.getEffect(), 2) }}x': '此外，他们的资源被电子提升 ({{ format(PLASMA.resources.volume.getEffect(), 2) }}x',
    'Generator Boosters ({{ format(player.cations.gen_boosts, 0) }}': '发电机助推器({{ format(player.cations.gen_boosts, 0) }}',
    'Effect: {{ FUNCTIONS.anions.types[x].effDesc() }}': '效果: {{ FUNCTIONS.anions.types[x].effDesc() }}',
    'Electrical Capacity': '电气容量',
    'Electrical Generators': '发电机',
    'electrical powers, which multiples': '电力，其倍数',
    'free anti-electrical anions': '游离抗电阴离子',
    'Your electrical capacity is': '你的电容量是',
    'You need to unlock more automatons!': '你需要解锁更多的自动器！',
    'Requires: {{ format(FUNCTIONS.anions.anti_anions.req(), 0) }} anions': '需要: {{ format(FUNCTIONS.anions.anti_anions.req(), 0) }} 阴离子',
    'Need to reach {{ format(CHALLENGES.cation[player.cations.chals.active].goal(), 0) }} electron to finish': '需要达到 {{ format(CHALLENGES.cation[player.cations.chals.active].goal(), 0) }} 电子以结束',
    'Respec all spent charged anions: {{ player.anions.respec_types?\'ON\':\'OFF\' }}': '重新检查所有用过的带电阴离子：{{ player.anions.respec_types?\'开启\':\'关闭\' }}',
    'And boosts this cations gain by {{ format(FUNCTIONS.cations.generators.getGainEffect(x).owner, 2) }}x': '并提高这种阳离子增益 {{ format(FUNCTIONS.cations.generators.getGainEffect(x).owner, 2) }}x ',
    'cations, which boosts anions gain by': '阳离子，这增加了阴离子增益',
    'charged anions': '带电阴离子',
    'bonus to their effects': '奖励到它们的效果',
    'More Electrical Powers': '更多电力',
    'previous powers': '之前力量',
    'Increase electrical powers from electrical generators multiplier by 1.0, raise this effect by 1.5': '将发电机的电力乘数增加 1.0，将此效果提高 1.5',
    'Currently: {{ BUYABLES.electrons[x].effDesc() }}': '当前: {{ BUYABLES.electrons[x].effDesc() }}',
    'Currently: {{ UPGRADES[UPGRADES.getRC(player.upg_choosed).r][UPGRADES.getRC(player.upg_choosed).c].effDesc() }}': '当前: {{ UPGRADES[UPGRADES.getRC(player.upg_choosed).r][UPGRADES.getRC(player.upg_choosed).c].effDesc() }}',
    'Cost: {{ format(FUNCTIONS.cations.generators.getCost(), 0) }} cations': '成本：{{ format(FUNCTIONS.cations.generators.getCost(), 0) }} 阳离子',
    'Boost types of cations gain by {{ format(FUNCTIONS.cations.generators.getBoostEffect(), 1) }}x': '提升阳离子类型增益 {{ format(FUNCTIONS.cations.generators.getBoostEffect(), 1) }}x',
    'anion charges per second': '每秒负离子电荷',
    'anion charges, which are adding': '阴离子电荷，增加',
    'anti-electrical anions, which make charged anion types': '反电阴离子，使带电阴离子类型',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',
    '': '',

    //树游戏
    '': '',
    '': '',

}


//需处理的前缀
var cnPrefix = {
    "(-": "(-",
    "(+": "(+",
    "(": "(",
    "-": "-",
    "+": "+",
    " ": " ",
    ": ": "： ",
    "\n": "",
    "                   ": "",
    "                  ": "",
    "                 ": "",
    "                ": "",
    "               ": "",
    "              ": "",
    "             ": "",
    "            ": "",
    "           ": "",
    "          ": "",
    "         ": "",
    "        ": "",
    "       ": "",
    "      ": "",
    "     ": "",
    "    ": "",
    "   ": "",
    "  ": "",
    " ": "",
    //树游戏
    "Show Milestones: ": "显示里程碑：",
    "Autosave: ": "自动保存: ",
    "Offline Prod: ": "离线生产: ",
    "Completed Challenges: ": "完成的挑战: ",
    "High-Quality Tree: ": "高质量树贴图: ",
    "Offline Time: ": "离线时间: ",
    "Theme: ": "主题: ",
    "Anti-Epilepsy Mode: ": "抗癫痫模式：",
    "In-line Exponent: ": "直列指数：",
    "Single-Tab Mode: ": "单标签模式：",
    "Time Played: ": "已玩时长：",
    "Game Version - ": "游戏版本 - ",
    "Level: ": "等级: ",
    "": "",
    "": "",
    "": "",
    "": "",
    "": "",
    "": "",
    "": "",
    "": "",
    "": "",
    "": "",
    "": "",
    "": "",
    "": "",
    "": "",
}

//需处理的后缀
var cnPostfix = {
    ":": "：",
    "：": "：",
    ": ": "： ",
    "： ": "： ",
    "/s)": "/s)",
    "/s": "/s",
    ")": ")",
    "%": "%",
    "                   ": "",
    "                  ": "",
    "                 ": "",
    "                ": "",
    "               ": "",
    "              ": "",
    "             ": "",
    "            ": "",
    "           ": "",
    "          ": "",
    "         ": "",
    "        ": "",
    "       ": "",
    "      ": "",
    "     ": "",
    "    ": "",
    "   ": "",
    "  ": "",
    " ": " ",
    "\n": "",
    "": "",
    "": "",
    "": "",
    "": "",
    "": "",
    "": "",
    "": "",
    "": "",
    "": "",
    "": "",
}

//需排除的，正则匹配
var cnExcludeWhole = [
    /^(\d+)$/,
    /^([\d\.]+)e(\d+)$/,
    /^([\d\.]+)$/,
    /^([\d\.]+)x$/,
    /^([\d\.,]+)$/,
    /^([\d\.,]+)x$/,
    /^([\d\.]+)e([\d\.,]+)$/,
    /^[\u4E00-\u9FA5]+$/
];
var cnExcludePostfix = [
]

//正则替换，带数字的固定格式句子
//纯数字：(\d+)
//逗号：([\d\.,]+)
//小数点：([\d\.]+)
//原样输出的字段：(.+)
//换行加空格：\n(.+)
var cnRegReplace = new Map([
    [/^Cost: (.+) electrons$/, '成本: $1 电子'],
    [/^Currently: (.+)x$/, '当前: $1x'],
    [/^You have (.+) points$/, '你有 $1 点数'],
    [/^Next at (.+) points$/, '下一个在 $1 点数'],
	[/^([\d\.]+)\/sec$/, '$1\/秒'],
    [/^requires ([\d\.]+) more research points$/, '需要$1个研究点'],
    [/^(\d+) Royal points$/, '$1 皇家点数'],
    [/^Cost: (\d+) RP$/, '成本：$1 皇家点数'],
    [/^Usages: (\d+)\/$/, '用途：$1\/'],
    [/^workers: (\d+)\/$/, '工人：$1\/'],

]);